// https://firebase.google.com/ > Docs > Overview > Firebase fundamentals > Web icon > Available Firebase services for web > Cloud Firestore for Web


// npm init  or   npm init -y

// npm install firebase  or   npm install firebase@latest

// npm install express or npm install express@latest


=> How to use Vite

1. Install 
    npm install --save-dev vite

2. Create a new file as vite.config.js 

3. Update package.json
    "scripts": {
        "dev":"vite",
        "build":"vite build"
    }

4. Run Build the app for production
    npm run build 

5. Run Vite in development server
    npm run dev

--------------------------------------------

=> Install express

npm install express     or      npm install express@latest

nodemon server.js


=> import

import express from "express";

--------------------------------------------

=> Enable Email/Password Authentication
Make sure you have enable Email/Password authentication in your Firebase Console

Authentication > Sign-in Method
Ensure Email/Password is enabled.
Save the changes 


=> Enable Google Sign-In in Firebase Console 

Authentication > Sign-in Method 
Enable Googel under the list of providers

Public-facing name for project = your firebase project id
Support email for project = your firebase gmail address 
Save the changes

--------------------------------------------

=> Customize the Password Reset Email Template
you can customize the password reset email link to redirected user to a specific page in your app.

Authentication > Template > Password reset > click Edit pen

--------------------------------------------

=> How to install Tailwind CSS

1. Install Tailwind CSS 
https://tailwindcss.com/docs/installation/using-postcss

npm install tailwindcss @tailwindcss/postcss postcss

npx tailwindcss init ( this create a tailwind.config.js file in to your project )

2. Add Tailwind to your PostCSS configuration
create postcss.config.js manually ( Note: do not forgot to export as ES6)

export default {
  plugins: {
    "@tailwindcss/postcss": {},
  }
}

3. Import Tailwind CSS
create a css file located to ( eg. src/css/main.css )

@import "tailwindcss";

4. Start your build process
npm run dev

5. Start using Tailwind in your HTML
<link rel="stylesheet" href="./css/main.css" type="text/css" />

--------------------------------------------

=> Install Date-fns 

1. Install 
https://date-fns.org/docs/Getting-Started

npm install date-fns --save

2. Import in src/main.js or src/js/uielement.js

import { format } from "date-fns";

const formatteddate = format(new Date(createdtime), "do MMM yyyy");


--------------------------------------------

=> Install Fontawesome 7

1. Install 
https://docs.fontawesome.com/

npm install --save @fortawesome/fontawesome-free

2. import in src/main.js or src/js/authsigninapp.js and src/js/app.js 

import "@fortawesome/fontawesome-free/css/all.min.css";

--------------------------------------------

=> Deploy on Cloud Server 

1. your project need Repo public/private to Github

2. signin your account to https://render.com/

3. Prepare the build output 
your project must builded and typically located in the 'dist' directory

4. Create a new static site
click > "New +" > Static Site > Github > your account > choose repo > click "Connect"

5. Name: publicchatroom
Branch: main
Build Command: npm run build    ( React, Vue, vite, etc... ) , ng build ( Angular )
Public Directory: dist 
Start Command: node server.js 

6. Environment Variables = copy paste .env data to Environment Variables