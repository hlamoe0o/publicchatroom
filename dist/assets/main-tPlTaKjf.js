import{c as L,d as O,a as b,o as E,q as Y,b as $,w as A,T as H,e as F}from"./main-BLajnP57.js";import{t as g,n as w,g as v,a as N,e as R,m as T,b as y}from"./en-US-R7S0T9dr.js";/* empty css                */function U(n,s){let e=n,r=s;const t=L(b,"chats");let i=null;const l=async f=>{const a=new Date,c={username:r,room:e,message:f,created_at:H.fromDate(a)};try{return await F(t,c)}catch(u){throw console.log("Error addchat = ",u),u}},o=f=>{i&&i(),i=E(Y(t,A("room","==",e),$("created_at")),a=>{a.docChanges().forEach(c=>{c.type==="added"&&f(c.doc.data())})})},d=f=>{e=f,console.log(`Room changed to ${e}`)},m=f=>{r=f,localStorage.setItem("username",r),console.log(`Username changed to ${r}`)};return(()=>{let f=setInterval(async()=>{try{const a=await getDocs(t);if(a.empty){console.log("No message to delete"),clearInterval(f);return}a.forEach(async c=>{await O(doc(b,"chats",c.id))}),console.log("All messages deleted successfully")}catch(a){console.error("Error deleting message : ",a)}},15e3)})(),{addChat:l,getChats:o,updateChatroom:d,updateUsername:m}}function p(n,s){const e=+g(n)-+g(s);return e<0?-1:e>0?1:e}function z(n,s,e){const[r,t]=w(e?.in,n,s),i=r.getFullYear()-t.getFullYear(),l=r.getMonth()-t.getMonth();return i*12+l}function j(n){return s=>{const r=(n?Math[n]:Math.trunc)(s);return r===0?0:r}}function k(n,s){return+g(n)-+g(s)}function G(n,s){const e=g(n,s?.in);return e.setHours(23,59,59,999),e}function B(n,s){const e=g(n,s?.in),r=e.getMonth();return e.setFullYear(e.getFullYear(),r+1,0),e.setHours(23,59,59,999),e}function J(n,s){const e=g(n,s?.in);return+G(e,s)==+B(e,s)}function K(n,s,e){const[r,t,i]=w(e?.in,n,n,s),l=p(t,i),o=Math.abs(z(t,i));if(o<1)return 0;t.getMonth()===1&&t.getDate()>27&&t.setDate(30),t.setMonth(t.getMonth()-l*o);let d=p(t,i)===-l;J(r)&&o===1&&p(r,i)===1&&(d=!1);const m=l*(o-+d);return m===0?0:m}function P(n,s,e){const r=k(n,s)/1e3;return j(e?.roundingMethod)(r)}function Q(n,s,e){const r=N(),t=e?.locale??r.locale??R,i=2520,l=p(n,s);if(isNaN(l))throw new RangeError("Invalid time value");const o=Object.assign({},e,{addSuffix:e?.addSuffix,comparison:l}),[d,m]=w(e?.in,...l>0?[s,n]:[n,s]),h=P(m,d),f=(v(m)-v(d))/1e3,a=Math.round((h-f)/60);let c;if(a<2)return e?.includeSeconds?h<5?t.formatDistance("lessThanXSeconds",5,o):h<10?t.formatDistance("lessThanXSeconds",10,o):h<20?t.formatDistance("lessThanXSeconds",20,o):h<40?t.formatDistance("halfAMinute",0,o):h<60?t.formatDistance("lessThanXMinutes",1,o):t.formatDistance("xMinutes",1,o):a===0?t.formatDistance("lessThanXMinutes",1,o):t.formatDistance("xMinutes",a,o);if(a<45)return t.formatDistance("xMinutes",a,o);if(a<90)return t.formatDistance("aboutXHours",1,o);if(a<T){const u=Math.round(a/60);return t.formatDistance("aboutXHours",u,o)}else{if(a<i)return t.formatDistance("xDays",1,o);if(a<y){const u=Math.round(a/T);return t.formatDistance("xDays",u,o)}else if(a<y*2)return c=Math.round(a/y),t.formatDistance("aboutXMonths",c,o)}if(c=K(m,d),c<12){const u=Math.round(a/y);return t.formatDistance("xMonths",u,o)}else{const u=c%12,x=Math.trunc(c/12);return u<3?t.formatDistance("aboutXYears",x,o):u<9?t.formatDistance("overXYears",x,o):t.formatDistance("almostXYears",x+1,o)}}function V(n){return{newli:e=>{const r=Q(e.created_at.toDate(),new Date,{addSuffix:!0}),t=`
            <li class="shadow rounded-lg px-4 py-2">
                <div class="flex justify-between">
                    <h5 class="text-gray-600 font-medium text-sm">${e.username}</h5>
                    <i class="text-gray-300 text-xs">${r}</i>
                </div>
                <p class="text-gray-600 text-sm">${e.message}</p>
            </li>
        `;n.innerHTML+=t}}}const W=document.querySelector(".chatrooms"),C=document.querySelector(".chat-ul"),S=document.querySelector(".chat-form"),D=document.querySelector(".user-form"),I=document.querySelector(".msg"),_=document.querySelector(".roomtitle"),{newli:X}=V(C),q=localStorage.username?localStorage.username:"Guest";D.username.placeholder=`username is ${q}`;const M=U("general",q);_.textContent="General";S.addEventListener("submit",n=>{n.preventDefault();const s=S.message.value.trim();M.addChat(s).then(()=>S.reset()).catch(e=>console.log(e))});D.addEventListener("submit",n=>{n.preventDefault();const s=D.username.value.trim();M.updateUsername(s),D.reset(),I.innerText=`New name updated to ${s}`,D.username.placeholder=`username is ${s}`,setTimeout(()=>I.innerText="",3e3)});W.addEventListener("click",n=>{n.preventDefault();const s=n.target.closest("button");if(s){const e=s.getAttribute("id"),r=s.querySelector("h3").innerText;_.textContent=r,C.innerHTML="",M.updateChatroom(e),M.getChats(t=>X(t))}});M.getChats(n=>X(n));
