import{c as q,o as L,q as O,a as Y,w as $,T as E,b as H,d as F}from"./main-CymjoVUT.js";import{t as h,n as w,g as b,a as U,e as A,m as C,b as y}from"./en-US-DsgqewAh.js";/* empty css                */function N(n,s){let e=n,r=s;const t=q(F,"chats");let u=null;return{addChat:async c=>{const g=new Date,a={username:r,room:e,message:c,created_at:E.fromDate(g)};try{return await H(t,a)}catch(l){throw console.log("Error addchat = ",l),l}},getChats:c=>{u&&u(),u=L(O(t,$("room","==",e),Y("created_at")),g=>{g.docChanges().forEach(a=>{a.type==="added"&&c(a.doc.data())})})},updateChatroom:c=>{e=c,console.log(`Room changed to ${e}`)},updateUsername:c=>{r=c,localStorage.setItem("username",r),console.log(`Username changed to ${r}`)}}}function p(n,s){const e=+h(n)-+h(s);return e<0?-1:e>0?1:e}function R(n,s,e){const[r,t]=w(e?.in,n,s),u=r.getFullYear()-t.getFullYear(),i=r.getMonth()-t.getMonth();return u*12+i}function z(n){return s=>{const r=(n?Math[n]:Math.trunc)(s);return r===0?0:r}}function j(n,s){return+h(n)-+h(s)}function k(n,s){const e=h(n,s?.in);return e.setHours(23,59,59,999),e}function G(n,s){const e=h(n,s?.in),r=e.getMonth();return e.setFullYear(e.getFullYear(),r+1,0),e.setHours(23,59,59,999),e}function B(n,s){const e=h(n,s?.in);return+k(e,s)==+G(e,s)}function J(n,s,e){const[r,t,u]=w(e?.in,n,n,s),i=p(t,u),o=Math.abs(R(t,u));if(o<1)return 0;t.getMonth()===1&&t.getDate()>27&&t.setDate(30),t.setMonth(t.getMonth()-i*o);let m=p(t,u)===-i;B(r)&&o===1&&p(r,u)===1&&(m=!1);const d=i*(o-+m);return d===0?0:d}function K(n,s,e){const r=j(n,s)/1e3;return z(e?.roundingMethod)(r)}function P(n,s,e){const r=U(),t=e?.locale??r.locale??A,u=2520,i=p(n,s);if(isNaN(i))throw new RangeError("Invalid time value");const o=Object.assign({},e,{addSuffix:e?.addSuffix,comparison:i}),[m,d]=w(e?.in,...i>0?[s,n]:[n,s]),c=K(d,m),g=(b(d)-b(m))/1e3,a=Math.round((c-g)/60);let l;if(a<2)return e?.includeSeconds?c<5?t.formatDistance("lessThanXSeconds",5,o):c<10?t.formatDistance("lessThanXSeconds",10,o):c<20?t.formatDistance("lessThanXSeconds",20,o):c<40?t.formatDistance("halfAMinute",0,o):c<60?t.formatDistance("lessThanXMinutes",1,o):t.formatDistance("xMinutes",1,o):a===0?t.formatDistance("lessThanXMinutes",1,o):t.formatDistance("xMinutes",a,o);if(a<45)return t.formatDistance("xMinutes",a,o);if(a<90)return t.formatDistance("aboutXHours",1,o);if(a<C){const f=Math.round(a/60);return t.formatDistance("aboutXHours",f,o)}else{if(a<u)return t.formatDistance("xDays",1,o);if(a<y){const f=Math.round(a/C);return t.formatDistance("xDays",f,o)}else if(a<y*2)return l=Math.round(a/y),t.formatDistance("aboutXMonths",l,o)}if(l=J(d,m),l<12){const f=Math.round(a/y);return t.formatDistance("xMonths",f,o)}else{const f=l%12,x=Math.trunc(l/12);return f<3?t.formatDistance("aboutXYears",x,o):f<9?t.formatDistance("overXYears",x,o):t.formatDistance("almostXYears",x+1,o)}}function Q(n){return{newli:e=>{const r=P(e.created_at.toDate(),new Date,{addSuffix:!0}),t=`
            <li class="shadow rounded-lg px-4 py-2">
                <div class="flex justify-between">
                    <h5 class="text-gray-600 font-medium text-sm">${e.username}</h5>
                    <i class="text-gray-300 text-xs">${r}</i>
                </div>
                <p class="text-gray-600 text-sm">${e.message}</p>
            </li>
        `;n.innerHTML+=t}}}const V=document.querySelector(".chatrooms"),v=document.querySelector(".chat-ul"),S=document.querySelector(".chat-form"),D=document.querySelector(".user-form"),T=document.querySelector(".msg"),_=document.querySelector(".roomtitle"),{newli:I}=Q(v),X=localStorage.username?localStorage.username:"Guest";D.username.placeholder=`username is ${X}`;const M=N("general",X);_.textContent="General";S.addEventListener("submit",n=>{n.preventDefault();const s=S.message.value.trim();M.addChat(s).then(()=>S.reset()).catch(e=>console.log(e))});D.addEventListener("submit",n=>{n.preventDefault();const s=D.username.value.trim();M.updateUsername(s),D.reset(),T.innerText=`New name updated to ${s}`,D.username.placeholder=`username is ${s}`,setTimeout(()=>T.innerText="",3e3)});V.addEventListener("click",n=>{n.preventDefault();const s=n.target.closest("button");if(s){const e=s.getAttribute("id"),r=s.querySelector("h3").innerText;_.textContent=r,v.innerHTML="",M.updateChatroom(e),M.getChats(t=>I(t))}});M.getChats(n=>I(n));
